
package agh.sr.ws.simplest.jaxws;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SimplestHelloImplService", targetNamespace = "http://simplest.ws.sr.agh/", wsdlLocation = "file:/C:/Users/Qba/Documents/STUDIA/rozprochy/zadania/zad5/Ex4/SimplestHelloImplService.wsdl")
public class SimplestHelloImplService
    extends Service
{

    private final static URL SIMPLESTHELLOIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException SIMPLESTHELLOIMPLSERVICE_EXCEPTION;
    private final static QName SIMPLESTHELLOIMPLSERVICE_QNAME = new QName("http://simplest.ws.sr.agh/", "SimplestHelloImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/Users/Qba/Documents/STUDIA/rozprochy/zadania/zad5/Ex4/SimplestHelloImplService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SIMPLESTHELLOIMPLSERVICE_WSDL_LOCATION = url;
        SIMPLESTHELLOIMPLSERVICE_EXCEPTION = e;
    }

    public SimplestHelloImplService() {
        super(__getWsdlLocation(), SIMPLESTHELLOIMPLSERVICE_QNAME);
    }

    public SimplestHelloImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SIMPLESTHELLOIMPLSERVICE_QNAME, features);
    }

    public SimplestHelloImplService(URL wsdlLocation) {
        super(wsdlLocation, SIMPLESTHELLOIMPLSERVICE_QNAME);
    }

    public SimplestHelloImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SIMPLESTHELLOIMPLSERVICE_QNAME, features);
    }

    public SimplestHelloImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SimplestHelloImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SimplestHello
     */
    @WebEndpoint(name = "SimplestHelloImplPort")
    public SimplestHello getSimplestHelloImplPort() {
        return super.getPort(new QName("http://simplest.ws.sr.agh/", "SimplestHelloImplPort"), SimplestHello.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SimplestHello
     */
    @WebEndpoint(name = "SimplestHelloImplPort")
    public SimplestHello getSimplestHelloImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://simplest.ws.sr.agh/", "SimplestHelloImplPort"), SimplestHello.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SIMPLESTHELLOIMPLSERVICE_EXCEPTION!= null) {
            throw SIMPLESTHELLOIMPLSERVICE_EXCEPTION;
        }
        return SIMPLESTHELLOIMPLSERVICE_WSDL_LOCATION;
    }

}
